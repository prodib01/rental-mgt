@model RentalManagementSystem.ViewModels.PropertyListViewModel

@{
    Layout = "_LandlordLayout";
}



    <div class="page-header">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0">Manage Properties</h1>
                    <p class="property-count mb-0">@Model.Properties.Count() properties listed</p>
                </div>
                <button class="btn btn-primary add-property-btn" data-bs-toggle="modal"
                    data-bs-target="#addPropertyModal">
                    <i class="fas fa-plus-circle me-2"></i>Add Property
                </button>
            </div>
        </div>
    </div>

    <div class="container py-4">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="py-3">Property Type</th>
                        <th class="py-3">Address</th>
                        <th class="py-3">Description</th>
                        <th class="py-3">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var property in Model.Properties)
                    {
                        <tr>
                            <td class="py-3">@property.Type</td>
                            <td class="py-3">@property.Address</td>
                            <td class="py-3">@property.Description</td>
                            <td class="py-3 action-buttons">
                                <button class="btn btn-outline-primary" data-bs-toggle="modal"
                                    data-bs-target="#editPropertyModal-@property.Id">
                                    <i class="fas fa-edit me-1"></i> Edit
                                </button>
                                <button class="btn btn-outline-danger" onclick="confirmDelete('@property.Id')">
                                    <i class="fas fa-trash-alt me-1"></i> Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

<!-- Add Property Modal -->
<div class="modal fade" id="addPropertyModal" tabindex="-1" aria-labelledby="addPropertyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addPropertyModalLabel">Add New Property</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
<form asp-controller="Properties" asp-action="AddProperty" method="post" id="addPropertyForm">
    @Html.AntiForgeryToken()
    
    <div class="mb-3">
        <label asp-for="NewProperty.Type" class="form-label">Property Type</label>
        <input asp-for="NewProperty.Type" name="Type" class="form-control" required>
        <span asp-validation-for="NewProperty.Type" class="text-danger"></span>
    </div>
    
    <div class="mb-3">
        <label asp-for="NewProperty.Address" class="form-label">Address</label>
        <input asp-for="NewProperty.Address" name="Address" class="form-control" required>
        <span asp-validation-for="NewProperty.Address" class="text-danger"></span>
    </div>
    
    <div class="mb-3">
        <label asp-for="NewProperty.Description" class="form-label">Description</label>
        <textarea asp-for="NewProperty.Description" name="Description" class="form-control" rows="3" required></textarea>
        <span asp-validation-for="NewProperty.Description" class="text-danger"></span>
    </div>
    
    <div class="text-end">
        <button type="button" class="btn btn-outline-secondary me-2" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Add Property</button>
    </div>
</form>
            </div>
        </div>
    </div>
</div>

   <!-- Edit Property Modal -->
@foreach (var property in Model.Properties)
{
    <div class="modal fade" id="editPropertyModal-@property.Id" tabindex="-1"
        aria-labelledby="editPropertyModalLabel-@property.Id" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editPropertyModalLabel-@property.Id">Edit Property</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <form asp-controller="Properties" asp-action="EditProperty" asp-route-id="@property.Id" method="post" class="editPropertyForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Id" value="@property.Id" />
                        <div class="mb-3">
                            <label for="Type" class="form-label">Property Type</label>
                            <input type="text" name="Type" class="form-control" value="@property.Type" required>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Type"></span>
                        </div>
                        <div class="mb-3">
                            <label for="Address" class="form-label">Address</label>
                            <input type="text" name="Address" class="form-control" value="@property.Address" required>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Address"></span>
                        </div>
                        <div class="mb-3">
                            <label for="Description" class="form-label">Description</label>
                            <textarea name="Description" class="form-control" rows="3" required>@property.Description</textarea>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Description"></span>
                        </div>
                        <div class="text-end">
                            <button type="button" class="btn btn-outline-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- Delete Property Modal -->
<div class="modal fade" id="deletePropertyModal" tabindex="-1" aria-labelledby="deletePropertyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="deletePropertyForm" asp-controller="Properties" asp-action="DeleteProperty" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="deletePropertyId" name="id" />
                <div class="modal-header">
                    <h5 class="modal-title" id="deletePropertyModalLabel">
                        <i class="fas fa-trash-alt me-2"></i>Delete Property
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="deleteErrorMessage" class="alert alert-danger d-none">
                    </div>
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Are you sure you want to delete this property?
                    </div>
                    <p class="text-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        This action cannot be undone.
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete Property</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <!-- Fourth: DataTables -->
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>

<script>
$(document).ready(function () {
    $("#addPropertyForm").on("submit", function (e) {
        if (!$(this).valid()) {
            e.preventDefault();
            return false;
        }
        
        var formData = $(this).serializeArray();
        
        $.ajax({
            url: $(this).attr("action"),
            type: "POST",
            data: formData,
            beforeSend: function () {
                $("#addPropertyForm button[type='submit']").prop("disabled", true).text("Adding...");
            },
            success: function (response) {
                $("#addPropertyModal").modal("hide");
                window.location.reload();
            },
            error: function (xhr) {
                var errors = xhr.responseJSON;
                if (errors) {
                    // Display validation errors
                    for (var prop in errors) {
                        $(`[data-valmsg-for="${prop}"]`).text(errors[prop]);
                    }
                } else {
                    alert("An error occurred while adding the property.");
                }
            },
            complete: function () {
                $("#addPropertyForm button[type='submit']").prop("disabled", false).text("Add Property");
            }
        });
        
        e.preventDefault();
    });

    // Client-side validation
    $("#addPropertyForm").validate({
        rules: {
            Type: "required",
            Address: "required",
            Description: "required"
        },
        messages: {
            Type: "Property type is required",
            Address: "Address is required",
            Description: "Description is required"
        },
        errorClass: "text-danger",
        errorElement: "span"
    });
});
</script>

<script>
$(document).ready(function () {
    // Edit Property Form Handling
    $(".editPropertyForm").on("submit", function (e) {
        e.preventDefault();
        var form = $(this);
        
        if (!form.valid()) {
            return false;
        }

        $.ajax({
            url: form.attr("action"),
            type: "POST",
            data: form.serialize(),
            beforeSend: function () {
                form.find("button[type='submit']").prop("disabled", true).text("Saving...");
            },
            success: function (response) {
                form.closest(".modal").modal("hide");
                window.location.reload();
            },
            error: function (xhr) {
                var errors = xhr.responseJSON;
                if (errors) {
                    // Display validation errors
                    for (var prop in errors) {
                        form.find(`[data-valmsg-for="${prop}"]`).text(errors[prop]);
                    }
                } else {
                    alert("An error occurred while updating the property.");
                }
            },
            complete: function () {
                form.find("button[type='submit']").prop("disabled", false).text("Save Changes");
            }
        });
    });

$(document).ready(function () {
    // Delete Property Handling
    window.confirmDelete = function(propertyId) {
        $("#deletePropertyId").val(propertyId);
        $("#deleteErrorMessage").addClass('d-none').text('');
        $("#deletePropertyModal").modal("show");
    };

    $("#deletePropertyForm").on("submit", function (e) {
        e.preventDefault();
        var form = $(this);
        var submitButton = form.find("button[type='submit']");
        var propertyId = $("#deletePropertyId").val();
        
        $.ajax({
            url: `/Landlord/Property/Delete/${propertyId}`,  // Make sure this matches your route
            type: "POST",
            data: form.serialize(),
            beforeSend: function () {
                submitButton.prop("disabled", true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...');
                $("#deleteErrorMessage").addClass('d-none').text('');
            },
            success: function (response) {
                if (response.success) {
                    $("#deletePropertyModal").modal("hide");
                    // Show success message
                    window.location.reload();
                } else {
                    // Show error message in modal
                    $("#deleteErrorMessage")
                        .removeClass('d-none')
                        .text(response.message || "An error occurred while deleting the property.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Delete error:", xhr.responseText);
                var errorMessage = "An error occurred while deleting the property.";
                try {
                    var response = JSON.parse(xhr.responseText);
                    if (response.message) {
                        errorMessage = response.message;
                    }
                } catch (e) {
                    console.error("Error parsing response:", e);
                }
                $("#deleteErrorMessage")
                    .removeClass('d-none')
                    .text(errorMessage);
            },
            complete: function () {
                submitButton.prop("disabled", false).text("Delete Property");
            }
        });
    });
});

    // Add this function to the global scope for the onclick handler
    window.confirmDelete = function(propertyId) {
        $("#deletePropertyId").val(propertyId);
        $("#deletePropertyModal").modal("show");
    };
});
</script>

}
